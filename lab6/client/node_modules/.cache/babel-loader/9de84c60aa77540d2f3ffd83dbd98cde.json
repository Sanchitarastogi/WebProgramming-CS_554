{"ast":null,"code":"import _classCallCheck from \"/Users/arpitrastogi/Desktop/web Prgrammig2/lab6/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/arpitrastogi/Desktop/web Prgrammig2/lab6/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/arpitrastogi/Desktop/web Prgrammig2/lab6/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/arpitrastogi/Desktop/web Prgrammig2/lab6/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/arpitrastogi/Desktop/web Prgrammig2/lab6/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/arpitrastogi/Desktop/web Prgrammig2/lab6/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/arpitrastogi/Desktop/web Prgrammig2/lab6/client/src/components/Todos/AddTodos.js\";\nimport React, { Component } from 'react'; //Import Query from react-apollo\n\nimport { Query, Mutation } from 'react-apollo';\nimport ReactModal from 'react-modal'; //Import the file where my query constants are defined\n\nimport queries from '../../queries'; //For react-Todo\n\nReactModal.setAppElement('#root');\nvar customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    width: '50%',\n    border: '1px solid #28547a',\n    borderRadius: '4px'\n  }\n};\n\nvar AddTodo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddTodo, _Component);\n\n  function AddTodo(props) {\n    var _this;\n\n    _classCallCheck(this, AddTodo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddTodo).call(this, props));\n    _this.state = {\n      showAddTodo: _this.props.isOpen\n    };\n    _this.handleOpenAddTodo = _this.handleOpenAddTodo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCloseAddTodo = _this.handleCloseAddTodo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AddTodo, [{\n    key: \"handleOpenAddTodo\",\n    value: function handleOpenAddTodo() {\n      this.setState({\n        showAddTodo: true\n      });\n    }\n  }, {\n    key: \"handleCloseAddTodo\",\n    value: function handleCloseAddTodo() {\n      this.setState({\n        showAddTodo: false\n      });\n      this.props.handleClose(false);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var body; //check which add Todo they are trying to get to and then render the form, mutation/query accordingly\n      //if Add Employee\n\n      if (this.props.Todo === 'addtodo') {\n        var title;\n        var completed;\n        var userId;\n        body = React.createElement(Mutation, {\n          mutation: queries.ADD_TODO,\n          update: function update(cache, _ref) {\n            var addTodo = _ref.data.addTodo;\n\n            var _cache$readQuery = cache.readQuery({\n              query: queries.GET_TODOS\n            }),\n                todos = _cache$readQuery.todos;\n\n            cache.writeQuery({\n              query: queries.GET_TODOS,\n              data: {\n                todos: todos.concat([addTodo])\n              }\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, function (addTodo, _ref2) {\n          var data = _ref2.data;\n          return React.createElement(\"form\", {\n            className: \"form\",\n            id: \"add-todo\",\n            onSubmit: function onSubmit(e) {\n              e.preventDefault();\n              var compval = completed.value === \"true\" ? true : false;\n              addTodo({\n                variables: {\n                  title: title.value,\n                  completed: compval,\n                  userId: parseInt(userId.value)\n                }\n              });\n              title.value = '';\n              completed.value = '';\n              userId.value = '1';\n\n              _this2.setState({\n                showAddTodo: false\n              });\n\n              alert('Todo Added');\n\n              _this2.props.handleClose();\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"form-group\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          }, \"Title:\", React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }), React.createElement(\"input\", {\n            ref: function ref(node) {\n              title = node;\n            },\n            required: true,\n            autoFocus: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }))), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"form-group\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          }, \"Completed:\", React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }))), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          }), React.createElement(Query, {\n            query: queries.GET_USERS,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          }, function (_ref3) {\n            var data = _ref3.data;\n            var users = data.users;\n\n            if (!users) {\n              return null;\n            }\n\n            return React.createElement(\"div\", {\n              className: \"form-group\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 117\n              },\n              __self: this\n            }, React.createElement(\"label\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 118\n              },\n              __self: this\n            }, \"User:\", React.createElement(\"select\", {\n              className: \"form-control\",\n              ref: function ref(node) {\n                userId = node;\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 120\n              },\n              __self: this\n            }, users.map(function (user) {\n              debugger;\n              return React.createElement(\"option\", {\n                key: user.id,\n                value: user.id,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 128\n                },\n                __self: this\n              }, user.name);\n            }))));\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141\n            },\n            __self: this\n          }), React.createElement(\"button\", {\n            className: \"button add-button\",\n            type: \"submit\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142\n            },\n            __self: this\n          }, \"Add Todo\"));\n        }); //If add Employer\n      } else if (this.props.Todo === 'addUser') {\n        var name;\n        var email;\n        var department;\n        var country;\n        body = React.createElement(Mutation, {\n          mutation: queries.ADD_USER,\n          update: function update(cache, _ref4) {\n            var addUser = _ref4.data.addUser;\n\n            var _cache$readQuery2 = cache.readQuery({\n              query: queries.GET_USERS_WITH_TODOS\n            }),\n                users = _cache$readQuery2.users;\n\n            cache.writeQuery({\n              query: queries.GET_USERS_WITH_TODOS,\n              data: {\n                users: users.concat([addUser])\n              }\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, function (addUser, _ref5) {\n          var data = _ref5.data;\n          return React.createElement(\"form\", {\n            className: \"form\",\n            id: \"add-User\",\n            onSubmit: function onSubmit(e) {\n              e.preventDefault();\n              addUser({\n                variables: {\n                  name: name.value,\n                  email: email.value,\n                  department: department.value,\n                  country: country.value\n                }\n              });\n              name.value = '';\n              email.value = '';\n              department.value = '';\n              country.value = '';\n\n              _this2.setState({\n                showAddTodo: false\n              });\n\n              alert('User Added');\n\n              _this2.props.handleClose();\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 166\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"form-group\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 188\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 189\n            },\n            __self: this\n          }, \"User Name:\", React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 191\n            },\n            __self: this\n          }), React.createElement(\"input\", {\n            ref: function ref(node) {\n              name = node;\n            },\n            required: true,\n            autoFocus: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192\n            },\n            __self: this\n          }))), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 234\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 236\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 237\n            },\n            __self: this\n          }), React.createElement(\"button\", {\n            className: \"button add-button\",\n            type: \"submit\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 238\n            },\n            __self: this\n          }, \"Add User\"));\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(ReactModal, {\n        name: \"addTodo\",\n        isOpen: this.state.showAddTodo,\n        contentLabel: \"Add Todo\",\n        style: customStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, body, React.createElement(\"button\", {\n        className: \"button cancel-button\",\n        onClick: this.handleCloseAddTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"Cancel\")));\n    }\n  }]);\n\n  return AddTodo;\n}(Component);\n\nexport default AddTodo;","map":{"version":3,"sources":["/Users/arpitrastogi/Desktop/web Prgrammig2/lab6/client/src/components/Todos/AddTodos.js"],"names":["React","Component","Query","Mutation","ReactModal","queries","setAppElement","customStyles","content","top","left","right","bottom","marginRight","transform","width","border","borderRadius","AddTodo","props","state","showAddTodo","isOpen","handleOpenAddTodo","bind","handleCloseAddTodo","setState","handleClose","body","Todo","title","completed","userId","ADD_TODO","cache","addTodo","data","readQuery","query","GET_TODOS","todos","writeQuery","concat","e","preventDefault","compval","value","variables","parseInt","alert","node","GET_USERS","users","map","user","id","name","email","department","country","ADD_USER","addUser","GET_USERS_WITH_TODOS"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n//Import Query from react-apollo\nimport {Query, Mutation} from 'react-apollo';\nimport ReactModal from 'react-modal';\n\n//Import the file where my query constants are defined\nimport queries from '../../queries';\n\n//For react-Todo\nReactModal.setAppElement('#root');\nconst customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n        width: '50%',\n        border: '1px solid #28547a',\n        borderRadius: '4px'\n    }\n};\n\nclass AddTodo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showAddTodo: this.props.isOpen\n        };\n        this.handleOpenAddTodo = this.handleOpenAddTodo.bind(this);\n        this.handleCloseAddTodo = this.handleCloseAddTodo.bind(this);\n    }\n\n    handleOpenAddTodo() {\n        this.setState({showAddTodo: true});\n    }\n\n    handleCloseAddTodo() {\n        this.setState({showAddTodo: false});\n        this.props.handleClose(false);\n    }\n    render() {\n        let body;\n        //check which add Todo they are trying to get to and then render the form, mutation/query accordingly\n        //if Add Employee\n        if (this.props.Todo === 'addtodo') {\n            let title;\n            let completed;\n            let userId;\n            body = (\n                <Mutation\n                    mutation={queries.ADD_TODO}\n                    update={(cache, {data: {addTodo}}) => {\n                        const {todos} = cache.readQuery({query: queries.GET_TODOS});\n                        cache.writeQuery({\n                            query: queries.GET_TODOS,\n                            data: {todos: todos.concat([addTodo])}\n                        });\n                    }}>\n                    {(addTodo, {data}) => (\n                        <form\n                            className='form'\n                            id='add-todo'\n                            onSubmit={(e) => {\n                                e.preventDefault();\n                                var compval = completed.value===\"true\"?true:false;\n                                addTodo({\n                                    variables: {\n                                        title: title.value,\n                                        completed: compval,\n                                        userId: parseInt(userId.value)\n                                    }\n                                });\n                                title.value = '';\n                                completed.value = '';\n                                userId.value = '1';\n                                this.setState({showAddTodo: false});\n                                alert('Todo Added');\n                                this.props.handleClose();\n                            }}>\n                            <div className='form-group'>\n                                <label>\n                                    Title:\n                                    <br />\n                                    <input\n                                        ref={(node) => {\n                                            title = node;\n                                        }}\n                                        required\n                                        autoFocus={true}\n                                    />\n                                </label>\n                            </div>\n                            <br />\n                            <div className='form-group'>\n                                <label>\n                                    Completed:\n                                    <br />\n                                    {/* <input\n                                        ref={(node) => {\n                                            completed = node;\n                                        }}\n                                        required\n                                    /> */}\n                                </label>\n                            </div>\n                            <br />\n\n                            <Query query={queries.GET_USERS}>\n                                {({data}) => {\n                                    const {users} = data;\n                                    if (!users) {\n                                        return null;\n                                    }\n                                    return (\n                                        <div className='form-group'>\n                                            <label>\n                                                User:\n                                                <select\n                                                    className='form-control'\n                                                    ref={(node) => {\n                                                        userId = node;\n                                                    }}>\n                                                    {users.map((user) => {\n                                                        debugger;\n                                                        return (\n                                                            <option key={user.id} value={user.id}>\n                                                                {user.name}\n                                                                \n                                                            </option>\n                                                        );\n                                                    })}\n                                                </select>\n                                            </label>\n                                        </div>\n                                    );\n                                }}\n                            </Query>\n                            <br />\n                            <br />\n                            <button className='button add-button' type='submit'>\n                                Add Todo\n                            </button>\n                        </form>\n                    )}\n                </Mutation>\n            );\n            //If add Employer\n        } else if (this.props.Todo === 'addUser') {\n            let name;\n            let email;\n            let department;\n            let country;\n            body = (\n                <Mutation\n                    mutation={queries.ADD_USER}\n                    update={(cache, {data: {addUser}}) => {\n                        const {users} = cache.readQuery({query: queries.GET_USERS_WITH_TODOS});\n                        cache.writeQuery({\n                            query: queries.GET_USERS_WITH_TODOS,\n                            data: {users: users.concat([addUser])}\n                        });\n                    }}>\n                    {(addUser, {data}) => (\n                        <form\n                            className='form'\n                            id='add-User'\n                            onSubmit={(e) => {\n                                e.preventDefault();\n                                addUser({\n                                    variables: {\n                                        name: name.value,\n                                        email: email.value,\n                                        department: department.value,\n                                        country: country.value\n                                    \n                                    }\n                                });\n                                name.value = '';\n                                email.value = '';\n                                department.value = '';\n                                country.value = '';\n                                this.setState({showAddTodo: false});\n                                alert('User Added');\n                                this.props.handleClose();\n                            }}>\n                            <div className='form-group'>\n                                <label>\n                                    User Name:\n                                    <br />\n                                    <input\n                                        ref={(node) => {\n                                            name = node;\n                                        }}\n                                        required\n                                        autoFocus={true}\n                                    />\n                                </label>\n                                {/* <label>\n                                    Email:\n                                    <br />\n                                    <input\n                                        ref={(node) => {\n                                            email = node;\n                                        }}\n                                        required\n                                        autoFocus={true}\n                                    />\n                                </label>\n                                <label>\n                                    Department:\n                                    <br />\n                                    <input\n                                        ref={(node) => {\n                                            department = node;\n                                        }}\n                                        required\n                                        autoFocus={true}\n                                    />\n                                </label>\n                                <label>\n                                    Country:\n                                    <br />\n                                    <input\n                                        ref={(node) => {\n                                            country = node;\n                                        }}\n                                        required\n                                        autoFocus={true}\n                                    />\n                                </label> */}\n                            </div>\n                            <br />\n\n                            <br />\n                            <br />\n                            <button className='button add-button' type='submit'>\n                                Add User\n                            </button>\n                        </form>\n                    )}\n                </Mutation>\n            );\n        }\n\n        return (\n            <div>\n                <ReactModal\n                    name='addTodo'\n                    isOpen={this.state.showAddTodo}\n                    contentLabel='Add Todo'\n                    style={customStyles}>\n                    {body}\n                    <button className='button cancel-button' onClick={this.handleCloseAddTodo}>\n                        Cancel\n                    </button>\n                </ReactModal>\n            </div>\n        );\n    }\n}\n\nexport default AddTodo;"]},"metadata":{},"sourceType":"module"}