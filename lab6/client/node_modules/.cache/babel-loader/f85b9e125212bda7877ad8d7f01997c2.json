{"ast":null,"code":"import _classCallCheck from \"/Users/arpitrastogi/Desktop/web Prgrammig2/lab6/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/arpitrastogi/Desktop/web Prgrammig2/lab6/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/arpitrastogi/Desktop/web Prgrammig2/lab6/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/arpitrastogi/Desktop/web Prgrammig2/lab6/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/arpitrastogi/Desktop/web Prgrammig2/lab6/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/arpitrastogi/Desktop/web Prgrammig2/lab6/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/arpitrastogi/Desktop/web Prgrammig2/lab6/client/src/components/Todos/DeleteTodos.js\";\nimport React, { Component } from 'react'; //Import Query from react-apollo\n\nimport { Mutation } from 'react-apollo';\nimport ReactModal from 'react-modal'; //Import the file where my query constants are defined\n\nimport queries from '../../queries'; //For react-Todo\n\nReactModal.setAppElement('#root');\nvar customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    width: '50%',\n    border: '1px solid #28547a',\n    borderRadius: '4px'\n  }\n};\n/* The React Apollo package grants access to a Query component, which takes a query as prop and executes it when its rendered. \nThat’s the important part: it executes the query when it is rendered. \nIt uses React’s render props pattern, using a child as a function implementation where you can access the result of the query as an argument.\n*/\n\nvar DeleteTodo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DeleteTodo, _Component);\n\n  function DeleteTodo(props) {\n    var _this;\n\n    _classCallCheck(this, DeleteTodo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DeleteTodo).call(this, props));\n    _this.state = {\n      showDeleteTodo: _this.props.isOpen,\n      Todo: _this.props.deleteTodo\n    };\n    _this.handleOpenDeleteTodo = _this.handleOpenDeleteTodo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCloseDeleteTodo = _this.handleCloseDeleteTodo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    console.log(_this.state.Todo);\n    return _this;\n  }\n\n  _createClass(DeleteTodo, [{\n    key: \"handleOpenDeleteTodo\",\n    value: function handleOpenDeleteTodo() {\n      this.setState({\n        showDeleteTodo: true\n      });\n    }\n  }, {\n    key: \"handleCloseDeleteTodo\",\n    value: function handleCloseDeleteTodo() {\n      this.setState({\n        showDeleteTodo: false\n      });\n      this.props.handleClose(false);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(ReactModal, {\n        name: \"deleteTodo\",\n        isOpen: this.state.showDeleteTodo,\n        contentLabel: \"Delete Todo\",\n        style: customStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Mutation, {\n        mutation: queries.DELETE_TODO,\n        update: function update(cache, _ref) {\n          var removeTodo = _ref.data.removeTodo;\n\n          var _cache$readQuery = cache.readQuery({\n            query: queries.GET_TODOS\n          }),\n              Todos = _cache$readQuery.Todos;\n\n          cache.writeQuery({\n            query: queries.GET_TODOS,\n            data: {\n              Todos: Todos.filter(function (e) {\n                return e.id !== _this2.state.Todo.id;\n              })\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, function (removeTodo, _ref2) {\n        var data = _ref2.data;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, \"Are you sure you want to delete \", _this2.state.Todo.title, ' ', _this2.state.Todo.completed, \"?\"), React.createElement(\"form\", {\n          className: \"form\",\n          id: \"delete-Todo\",\n          onSubmit: function onSubmit(e) {\n            e.preventDefault();\n            removeTodo({\n              variables: {\n                id: _this2.state.Todo.id\n              }\n            });\n\n            _this2.setState({\n              showDeleteTodo: false\n            });\n\n            alert('Todo Deleted');\n\n            _this2.props.handleClose();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          className: \"button add-button\",\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, \"Delete Todo\")));\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"button cancel-button\",\n        onClick: this.handleCloseDeleteTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Cancel\")));\n    }\n  }]);\n\n  return DeleteTodo;\n}(Component);\n\nexport default DeleteTodo;","map":{"version":3,"sources":["/Users/arpitrastogi/Desktop/web Prgrammig2/lab6/client/src/components/Todos/DeleteTodos.js"],"names":["React","Component","Mutation","ReactModal","queries","setAppElement","customStyles","content","top","left","right","bottom","marginRight","transform","width","border","borderRadius","DeleteTodo","props","state","showDeleteTodo","isOpen","Todo","deleteTodo","handleOpenDeleteTodo","bind","handleCloseDeleteTodo","console","log","setState","handleClose","DELETE_TODO","cache","removeTodo","data","readQuery","query","GET_TODOS","Todos","writeQuery","filter","e","id","title","completed","preventDefault","variables","alert"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n//Import Query from react-apollo\nimport {Mutation} from 'react-apollo';\nimport ReactModal from 'react-modal';\n\n//Import the file where my query constants are defined\nimport queries from '../../queries';\n\n//For react-Todo\nReactModal.setAppElement('#root');\nconst customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n        width: '50%',\n        border: '1px solid #28547a',\n        borderRadius: '4px'\n    }\n};\n\n/* The React Apollo package grants access to a Query component, which takes a query as prop and executes it when its rendered. \nThat’s the important part: it executes the query when it is rendered. \nIt uses React’s render props pattern, using a child as a function implementation where you can access the result of the query as an argument.\n*/\nclass DeleteTodo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showDeleteTodo: this.props.isOpen,\n            Todo: this.props.deleteTodo\n        };\n        this.handleOpenDeleteTodo = this.handleOpenDeleteTodo.bind(this);\n        this.handleCloseDeleteTodo = this.handleCloseDeleteTodo.bind(this);\n        console.log(this.state.Todo);\n    }\n\n    handleOpenDeleteTodo() {\n        this.setState({showDeleteTodo: true});\n    }\n\n    handleCloseDeleteTodo() {\n        this.setState({showDeleteTodo: false});\n        this.props.handleClose(false);\n    }\n    render() {\n        return (\n            <div>\n                {/*Add Todo Todo */}\n                <ReactModal\n                    name='deleteTodo'\n                    isOpen={this.state.showDeleteTodo}\n                    contentLabel='Delete Todo'\n                    style={customStyles}>\n                    {/*Here we set up the mutation, since I want the data on the page to update\n\t\t\t\t\t\tafter I have added someone, I need to update the cache. If not then\n\t\t\t\t\t\tI need to refresh the page to see the data updated \n\t\t\t\t\t\tSee: https://www.apollographql.com/docs/react/essentials/mutations for more\n\t\t\t\t\t\tinformation on Mutations\n\t\t\t\t\t*/}\n                    <Mutation\n                        mutation={queries.DELETE_TODO}\n                        update={(cache, {data: {removeTodo}}) => {\n                            const {Todos} = cache.readQuery({query: queries.GET_TODOS});\n                            cache.writeQuery({\n                                query: queries.GET_TODOS,\n                                data: {Todos: Todos.filter((e) => e.id !== this.state.Todo.id)}\n                            });\n                        }}>\n                        {(removeTodo, {data}) => (\n                            <div>\n                                <p>\n                                    Are you sure you want to delete {this.state.Todo.title}{' '}\n                                    {this.state.Todo.completed}?\n                                </p>\n\n                                <form\n                                    className='form'\n                                    id='delete-Todo'\n                                    onSubmit={(e) => {\n                                        e.preventDefault();\n                                        removeTodo({\n                                            variables: {\n                                                id: this.state.Todo.id\n                                            }\n                                        });\n                                        this.setState({showDeleteTodo: false});\n                                        alert('Todo Deleted');\n                                        this.props.handleClose();\n                                    }}>\n                                    <br />\n                                    <br />\n                                    <button className='button add-button' type='submit'>\n                                        Delete Todo\n                                    </button>\n                                </form>\n                            </div>\n                        )}\n                    </Mutation>\n                    <br />\n                    <br />\n                    <button className='button cancel-button' onClick={this.handleCloseDeleteTodo}>\n                        Cancel\n                    </button>\n                </ReactModal>\n            </div>\n        );\n    }\n}\n\nexport default DeleteTodo;"]},"metadata":{},"sourceType":"module"}