{"ast":null,"code":"import _classCallCheck from \"/Users/arpitrastogi/Desktop/web Prgrammig2/lab6/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/arpitrastogi/Desktop/web Prgrammig2/lab6/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/arpitrastogi/Desktop/web Prgrammig2/lab6/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/arpitrastogi/Desktop/web Prgrammig2/lab6/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/arpitrastogi/Desktop/web Prgrammig2/lab6/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/arpitrastogi/Desktop/web Prgrammig2/lab6/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/arpitrastogi/Desktop/web Prgrammig2/lab6/client/src/components/Todos.js\";\nimport React, { Component } from 'react'; //Import Query from react-apollo\n\nimport { Query } from 'react-apollo'; //Import the Todos for Adding and Updating todo\n\nimport AddTodo from './Todos/AddTodos';\nimport EditTodo from './Todos/EditTodos';\nimport DeleteTodo from './Todos/DeleteTodos'; //Import the file where my query constants are defined\n\nimport queries from '../queries';\n/* The React Apollo package grants access to a Query component, which takes a query as prop and executes it when its rendered. \nThat’s the important part: it executes the query when it is rendered. \nIt uses React’s render props pattern, using a child as a function implementation where you can access the result of the query as an argument.\n*/\n\nvar Todos =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Todos, _Component);\n\n  function Todos(props) {\n    var _this;\n\n    _classCallCheck(this, Todos);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Todos).call(this, props));\n    _this.state = {\n      showEditTodo: false,\n      showAddTodo: false,\n      showDeleteTodo: false,\n      edittodo: null,\n      deletetodo: null\n    };\n    _this.handleOpenEditTodo = _this.handleOpenEditTodo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleOpenAddTodo = _this.handleOpenAddTodo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCloseTodos = _this.handleCloseTodos.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Todos, [{\n    key: \"handleOpenEditTodo\",\n    value: function handleOpenEditTodo(todo) {\n      this.setState({\n        showEditTodo: true,\n        edittodo: todo\n      });\n    }\n  }, {\n    key: \"handleOpenDeleteTodo\",\n    value: function handleOpenDeleteTodo(todo) {\n      this.setState({\n        showDeleteTodo: true,\n        deletetodo: todo\n      });\n    }\n  }, {\n    key: \"handleCloseTodos\",\n    value: function handleCloseTodos() {\n      this.setState({\n        showAddTodo: false,\n        showEditTodo: false,\n        showDeleteTodo: false\n      });\n    }\n  }, {\n    key: \"handleOpenAddTodo\",\n    value: function handleOpenAddTodo() {\n      this.setState({\n        showAddTodo: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"button\",\n        onClick: this.handleOpenAddTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Create todo\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(Query, {\n        query: queries.GET_TODOS,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, function (_ref) {\n        var data = _ref.data;\n        var Todos = data.Todos;\n\n        if (!todos) {\n          return null;\n        }\n\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, todos.map(function (todo) {\n          return React.createElement(\"div\", {\n            className: \"card\",\n            key: todo.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"card-body\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }, React.createElement(\"h5\", {\n            className: \"card-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, todo.title, \" \", todo.completed), \"user: \", todo.user.name, React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }), React.createElement(\"button\", {\n            className: \"button\",\n            onClick: function onClick() {\n              _this2.handleOpenEditTodo(todo);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, \"Edit\"), React.createElement(\"button\", {\n            className: \"button\",\n            onClick: function onClick() {\n              _this2.handleOpenDeleteTodo(todo);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          }, \"Delete\"), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          })));\n        }));\n      }), this.state && this.state.showEditTodo && React.createElement(EditTodo, {\n        isOpen: this.state.showEditTodo,\n        todo: this.state.edittodo,\n        handleClose: this.handleCloseTodos,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), this.state && this.state.showAddTodo && React.createElement(AddTodo, {\n        isOpen: this.state.showAddTodo,\n        handleClose: this.handleCloseTodos,\n        Todo: \"addtodo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), this.state && this.state.showDeleteTodo && React.createElement(DeleteTodo, {\n        isOpen: this.state.showDeleteTodo,\n        handleClose: this.handleCloseTodos,\n        deletetodo: this.state.deletetodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Todos;\n}(Component);\n\nexport default Todos;","map":{"version":3,"sources":["/Users/arpitrastogi/Desktop/web Prgrammig2/lab6/client/src/components/Todos.js"],"names":["React","Component","Query","AddTodo","EditTodo","DeleteTodo","queries","Todos","props","state","showEditTodo","showAddTodo","showDeleteTodo","edittodo","deletetodo","handleOpenEditTodo","bind","handleOpenAddTodo","handleCloseTodos","todo","setState","GET_TODOS","data","todos","map","id","title","completed","user","name","handleOpenDeleteTodo"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n//Import Query from react-apollo\nimport {Query} from 'react-apollo';\n\n//Import the Todos for Adding and Updating todo\nimport AddTodo from './Todos/AddTodos';\nimport EditTodo from './Todos/EditTodos';\nimport DeleteTodo from './Todos/DeleteTodos';\n\n//Import the file where my query constants are defined\nimport queries from '../queries';\n\n/* The React Apollo package grants access to a Query component, which takes a query as prop and executes it when its rendered. \nThat’s the important part: it executes the query when it is rendered. \nIt uses React’s render props pattern, using a child as a function implementation where you can access the result of the query as an argument.\n*/\nclass Todos extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showEditTodo: false,\n            showAddTodo: false,\n            showDeleteTodo: false,\n            edittodo: null,\n            deletetodo: null\n        };\n        this.handleOpenEditTodo = this.handleOpenEditTodo.bind(this);\n        this.handleOpenAddTodo = this.handleOpenAddTodo.bind(this);\n        this.handleCloseTodos = this.handleCloseTodos.bind(this);\n    }\n    handleOpenEditTodo(todo) {\n        this.setState({\n            showEditTodo: true,\n            edittodo: todo\n        });\n    }\n\n    handleOpenDeleteTodo(todo) {\n        this.setState({\n            showDeleteTodo: true,\n            deletetodo: todo\n        });\n    }\n    handleCloseTodos() {\n        this.setState({showAddTodo: false, showEditTodo: false, showDeleteTodo: false});\n    }\n\n    handleOpenAddTodo() {\n        this.setState({showAddTodo: true});\n    }\n    render() {\n        return (\n            <div>\n                <button className='button' onClick={this.handleOpenAddTodo}>\n                    Create todo\n                </button>\n                <br />\n                <br />\n                <Query query={queries.GET_TODOS}>\n                    {({data}) => {\n                        const {Todos} = data;\n                        if (!todos) {\n                            return null;\n                        }\n                        return (\n                            <div>\n                                {todos.map((todo) => {\n                                    return (\n                                        <div className='card' key={todo.id}>\n                                            <div className='card-body'>\n                                                <h5 className='card-title'>\n                                                    {todo.title} {todo.completed}\n                                                </h5>\n                                                user: {todo.user.name}\n                                                <br />\n                                                <button\n                                                    className='button'\n                                                    onClick={() => {\n                                                        this.handleOpenEditTodo(todo);\n                                                    }}>\n                                                    Edit\n                                                </button>\n                                                <button\n                                                    className='button'\n                                                    onClick={() => {\n                                                        this.handleOpenDeleteTodo(todo);\n                                                    }}>\n                                                    Delete\n                                                </button>\n                                                <br />\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        );\n                    }}\n                </Query>\n\n                {/*Edit todo Todo - NOT DONE YET */}\n                {this.state &&\n                this.state.showEditTodo && (\n                    <EditTodo\n                        isOpen={this.state.showEditTodo}\n                        todo={this.state.edittodo}\n                        handleClose={this.handleCloseTodos}\n                    />\n                )}\n\n                {/*Add todo Todo */}\n                {this.state &&\n                this.state.showAddTodo && (\n                    <AddTodo\n                        isOpen={this.state.showAddTodo}\n                        handleClose={this.handleCloseTodos}\n                        Todo='addtodo'\n                    />\n                )}\n\n                {/*Delete todo Todo */}\n                {this.state &&\n                this.state.showDeleteTodo && (\n                    <DeleteTodo\n                        isOpen={this.state.showDeleteTodo}\n                        handleClose={this.handleCloseTodos}\n                        deletetodo={this.state.deletetodo}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default Todos;"]},"metadata":{},"sourceType":"module"}