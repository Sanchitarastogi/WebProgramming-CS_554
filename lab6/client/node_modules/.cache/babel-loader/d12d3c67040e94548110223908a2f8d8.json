{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/arpitrastogi/Desktop/web Prgrammig2/lab6/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation changeTodos($id: String!, $title: String, $completed: Boolean, $UserId: Int) {\\n        editTodos(id: $id, UserId: $UserId, title: $title, completed: $completed) {\\n            id\\n            title\\n            completed\\n            User {\\n                id\\n                name\\n                email\\n                department\\n                country\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation deleteTodo($id: String!) {\\n        removeTodos(id: $id) {\\n            id\\n            title\\n            completed\\n            User {\\n                name\\n                id\\n                email\\n                department\\n                country\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation createUser($name: String!) {\\n        addUser(name: $name) {\\n            id\\n            name\\n            email\\n            department\\n            country\\n            numOfTodos\\n            Todos {\\n                id\\n                title\\n                completed\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation createTodos(\\n        $title: String!, \\n        $completed: Boolean!, \\n        $userId: Int!) {\\n        addTodo(title: $title, completed: $completed, UserId: $UserId) {\\n            id\\n            title\\n            completed\\n            User {\\n                id\\n                name\\n                email\\n                department\\n                country\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    query {\\n        users {\\n            id\\n            name\\n            email\\n            department\\n            country\\n            numOfTodos\\n            todos {\\n                id\\n                title\\n                completed\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    query {\\n        users {\\n            name\\n            id\\n            email\\n            department\\n            country\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query {\\n        todos {\\n            id\\n            title\\n            completed\\n            user {\\n                name\\n                id\\n                email\\n                department\\n                country\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nvar GET_TODOS = gql(_templateObject());\nvar GET_USERS = gql(_templateObject2());\nvar GET_USERS_WITH_TODOS = gql(_templateObject3());\nvar ADD_TODO = gql(_templateObject4());\nvar ADD_USER = gql(_templateObject5());\nvar DELETE_TODO = gql(_templateObject6());\nvar EDIT_TODO = gql(_templateObject7());\nexport default {\n  ADD_TODO: ADD_TODO,\n  GET_TODOS: GET_TODOS,\n  GET_USERS: GET_USERS,\n  DELETE_TODO: DELETE_TODO,\n  GET_USERS_WITH_TODOS: GET_USERS_WITH_TODOS,\n  ADD_USER: ADD_USER,\n  EDIT_TODO: EDIT_TODO\n};","map":{"version":3,"sources":["/Users/arpitrastogi/Desktop/web Prgrammig2/lab6/client/src/queries.js"],"names":["gql","GET_TODOS","GET_USERS","GET_USERS_WITH_TODOS","ADD_TODO","ADD_USER","DELETE_TODO","EDIT_TODO"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,IAAMC,SAAS,GAAGD,GAAH,mBAAf;AAiBA,IAAME,SAAS,GAAGF,GAAH,oBAAf;AAYA,IAAMG,oBAAoB,GAAGH,GAAH,oBAA1B;AAkBA,IAAMI,QAAQ,GAAGJ,GAAH,oBAAd;AAoBA,IAAMK,QAAQ,GAAGL,GAAH,oBAAd;AAkBA,IAAMM,WAAW,GAAGN,GAAH,oBAAjB;AAiBA,IAAMO,SAAS,GAAGP,GAAH,oBAAf;AAiBA,eAAe;AACXI,EAAAA,QAAQ,EAARA,QADW;AAEXH,EAAAA,SAAS,EAATA,SAFW;AAGXC,EAAAA,SAAS,EAATA,SAHW;AAIXI,EAAAA,WAAW,EAAXA,WAJW;AAKXH,EAAAA,oBAAoB,EAApBA,oBALW;AAMXE,EAAAA,QAAQ,EAARA,QANW;AAOXE,EAAAA,SAAS,EAATA;AAPW,CAAf","sourcesContent":["import gql from 'graphql-tag';\n\nconst GET_TODOS = gql`\n    query {\n        todos {\n            id\n            title\n            completed\n            user {\n                name\n                id\n                email\n                department\n                country\n            }\n        }\n    }\n`;\n\nconst GET_USERS = gql`\n    query {\n        users {\n            name\n            id\n            email\n            department\n            country\n        }\n    }\n`;\n\nconst GET_USERS_WITH_TODOS = gql`\n    query {\n        users {\n            id\n            name\n            email\n            department\n            country\n            numOfTodos\n            todos {\n                id\n                title\n                completed\n            }\n        }\n    }\n`;\n\nconst ADD_TODO = gql`\n    mutation createTodos(\n        $title: String!, \n        $completed: Boolean!, \n        $userId: Int!) {\n        addTodo(title: $title, completed: $completed, UserId: $UserId) {\n            id\n            title\n            completed\n            User {\n                id\n                name\n                email\n                department\n                country\n            }\n        }\n    }\n`;\n\nconst ADD_USER = gql`\n    mutation createUser($name: String!) {\n        addUser(name: $name) {\n            id\n            name\n            email\n            department\n            country\n            numOfTodos\n            Todos {\n                id\n                title\n                completed\n            }\n        }\n    }\n`;\n\nconst DELETE_TODO = gql`\n    mutation deleteTodo($id: String!) {\n        removeTodos(id: $id) {\n            id\n            title\n            completed\n            User {\n                name\n                id\n                email\n                department\n                country\n            }\n        }\n    }\n`;\n\nconst EDIT_TODO = gql`\n    mutation changeTodos($id: String!, $title: String, $completed: Boolean, $UserId: Int) {\n        editTodos(id: $id, UserId: $UserId, title: $title, completed: $completed) {\n            id\n            title\n            completed\n            User {\n                id\n                name\n                email\n                department\n                country\n            }\n        }\n    }\n`;\n\nexport default {\n    ADD_TODO,\n    GET_TODOS,\n    GET_USERS,\n    DELETE_TODO,\n    GET_USERS_WITH_TODOS,\n    ADD_USER,\n    EDIT_TODO\n};"]},"metadata":{},"sourceType":"module"}