{"ast":null,"code":"import _classCallCheck from \"/Users/arpitrastogi/Desktop/web Prgrammig2/lab6/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/arpitrastogi/Desktop/web Prgrammig2/lab6/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/arpitrastogi/Desktop/web Prgrammig2/lab6/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/arpitrastogi/Desktop/web Prgrammig2/lab6/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/arpitrastogi/Desktop/web Prgrammig2/lab6/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/arpitrastogi/Desktop/web Prgrammig2/lab6/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/arpitrastogi/Desktop/web Prgrammig2/lab6/client/src/components/Users.js\";\nimport React, { Component } from 'react'; //Import Query from react-apollo\n\nimport { Query } from 'react-apollo'; //Import the Todos for Adding and Updating Employee\n\nimport AddTodo from './Todos/AddTodos'; //Import the file where my query constants are defined\n\nimport queries from '../queries';\n/* The React Apollo package grants access to a Query component, which takes a query as prop and executes it when its rendered. \nThat’s the important part: it executes the query when it is rendered. \nIt uses React’s render props pattern, using a child as a function implementation where you can access the result of the query as an argument.\n*/\n\nvar Users =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Users, _Component);\n\n  function Users(props) {\n    var _this;\n\n    _classCallCheck(this, Users);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Users).call(this, props));\n    _this.state = {\n      showAddTodo: false\n    };\n    _this.handleOpenAddTodo = _this.handleOpenAddTodo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCloseTodos = _this.handleCloseTodos.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Users, [{\n    key: \"handleCloseTodos\",\n    value: function handleCloseTodos() {\n      this.setState({\n        showAddTodo: false\n      });\n    }\n  }, {\n    key: \"handleOpenAddTodo\",\n    value: function handleOpenAddTodo() {\n      this.setState({\n        showAddTodo: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"button\",\n        onClick: this.handleOpenAddTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Create User\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(Query, {\n        query: queries.GET_USERS_WITH_TODOS,\n        fetchPolicy: 'cache-and-network',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, function (_ref) {\n        var data = _ref.data;\n        var users = data.users;\n\n        if (!users) {\n          return null;\n        }\n\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, users.map(function (user) {\n          return React.createElement(\"div\", {\n            className: \"card\",\n            key: user.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"card-body\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, React.createElement(\"h5\", {\n            className: \"card-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, user.name), React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, \"Number of Todos:\"), \" \", user.numOfTodos, React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }), React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, \"Todos:\"), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }), React.createElement(\"ol\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }, user.todos.map(function (todo) {\n            return React.createElement(\"li\", {\n              key: todo.id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 64\n              },\n              __self: this\n            }, todo.title, \" \", todo.completed);\n          }))));\n        }));\n      }), this.state && this.state.showAddTodo && React.createElement(AddTodo, {\n        isOpen: this.state.showAddTodo,\n        handleClose: this.handleCloseTodos,\n        Todo: \"addUser\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Users;\n}(Component);\n\nexport default Users;","map":{"version":3,"sources":["/Users/arpitrastogi/Desktop/web Prgrammig2/lab6/client/src/components/Users.js"],"names":["React","Component","Query","AddTodo","queries","Users","props","state","showAddTodo","handleOpenAddTodo","bind","handleCloseTodos","setState","GET_USERS_WITH_TODOS","data","users","map","user","id","name","numOfTodos","todos","todo","title","completed"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n//Import Query from react-apollo\nimport {Query} from 'react-apollo';\n\n//Import the Todos for Adding and Updating Employee\nimport AddTodo from './Todos/AddTodos';\n\n//Import the file where my query constants are defined\nimport queries from '../queries';\n\n/* The React Apollo package grants access to a Query component, which takes a query as prop and executes it when its rendered. \nThat’s the important part: it executes the query when it is rendered. \nIt uses React’s render props pattern, using a child as a function implementation where you can access the result of the query as an argument.\n*/\nclass Users extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showAddTodo: false\n        };\n       \n        this.handleOpenAddTodo = this.handleOpenAddTodo.bind(this);\n        this.handleCloseTodos = this.handleCloseTodos.bind(this);\n    }\n\n    handleCloseTodos() {\n        this.setState({showAddTodo: false});\n    }\n\n    handleOpenAddTodo() {\n        this.setState({showAddTodo: true});\n    }\n\n    render() {\n        return (\n            <div>\n                <button className='button' onClick={this.handleOpenAddTodo}>\n                    Create User\n                </button>\n                <br />\n                <br />\n                <Query query={queries.GET_USERS_WITH_TODOS} fetchPolicy={'cache-and-network'}>\n                    {({data}) => {\n                        const {users} = data;\n                        if (!users) {\n                            return null;\n                        }\n                        return (\n                            <div>\n                                {users.map((user) => {\n                                    return (\n                                        <div className='card' key={user.id}>\n                                            <div className='card-body'>\n                                                <h5 className='card-title'>{user.name}</h5>\n\n                                                <span>Number of Todos:</span> {user.numOfTodos}\n                                                <br />\n                                                <br />\n                                                <span>Todos:</span>\n                                                <br />\n                                                <ol>\n                                                    {user.todos.map((todo) => {\n                                                        return (\n                                                            <li key={todo.id}>\n                                                                {todo.title} {todo.completed}\n                                                            </li>\n                                                        );\n                                                    })}\n                                                </ol>\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        );\n                    }}\n                </Query>\n\n                {/*Add Employer Todo */}\n                {this.state &&\n                this.state.showAddTodo && (\n                    <AddTodo\n                        isOpen={this.state.showAddTodo}\n                        handleClose={this.handleCloseTodos}\n                        Todo='addUser'\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}